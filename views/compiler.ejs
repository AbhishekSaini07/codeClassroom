
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div className='full'>
        <Navbar collapseOnSelect expand="lg" className="bg-body-tertiary">
          <Container className='header'>
            <Image src={logoImage} alt="Logo" height="48px" />
            <Navbar.Toggle aria-controls="responsive-navbar-nav" />
            <Navbar.Collapse id="responsive-navbar-nav">
              <Nav className="me-auto"></Nav>
  
              <Nav>
                <div className='langbutton'>
                  Language:&nbsp;
                  <select
                    value={selectedLanguage}
                    onChange={(e) => setSelectedLanguage(e.target.value)}
                  >
                    <option value="javascript">JavaScript</option>
                    <option value="python3">python3</option>
                    <option value="java">java</option>
                    <option value="c">c</option>
                    <option value="cpp17">cpp17</option>
                    <option value="dart">dart</option>
                  </select>
                </div>
                <span>&emsp; </span>
                <button className="RunButton" onClick={handleCompile}>
                  Run Code
                </button>
              </Nav>
            </Navbar.Collapse>
          </Container>
        </Navbar>
        <div className='cBody'>
          <Row>
            <Col>
              <CodeMirror
                className='cb'
                value={codeInput}
                height="60vh"
                theme={xcodeLight}
                extensions={[StreamLanguage.define(c)]}
                onChange={handleCodeChange}
              />
            </Col>
          </Row>
          <Row>
            <Col className='IOs'>
              <label htmlFor='inputTextArea'>Input:</label>
              <textarea
                id='inputTextArea'
                className='full-width'
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                placeholder="Additional Input"
              />
            </Col>
            <Col className='IOs'>
              <label htmlFor='outputTextArea'>Output:</label>
              {loading && <Spinner animation="border" role="status" variant="primary" />}
              {error && <Alert variant="danger">{error}</Alert>}
              {!loading && !error && (
                <div id="outputbloc" dangerouslySetInnerHTML={{ __html: stringWithBreaks }}></div>
              )}
            </Col>
          </Row>
        </div>
      </div>
</body>
</html>